$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$BOSH_INSTALL_TARGET = Resolve-Path "${env:BOSH_INSTALL_TARGET}"
if ((Get-Item $BOSH_INSTALL_TARGET).LinkType -ne "") {
  $BOSH_INSTALL_TARGET = (Get-Item $BOSH_INSTALL_TARGET).Target
}

. C:\var\vcap\packages\golang-1.11-windows\bosh\compile.ps1

$pkg_name="winc-network"
$pkg_path="code.cloudfoundry.org/winc/cmd/winc-network"

$env:PATH="C:\var\vcap\packages\mingw\mingw64\bin;"+$env:Path

New-Item -ItemType "directory" -Force "${BOSH_INSTALL_TARGET}\src"

robocopy.exe /E "${PWD}" "${BOSH_INSTALL_TARGET}\src"
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy.exe /E ${PWD} ${BOSH_INSTALL_TARGET}\src"
}

go.exe build -o "${BOSH_INSTALL_TARGET}\${pkg_name}.exe" "${pkg_path}"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: ${pkg_path}"
}

gcc.exe -c "code.cloudfoundry.org\winc\network\firewall\dll\firewall.c" -o firewall.o
if ($LastExitCode -ne 0) {
  exit $LastExitCode
}
gcc.exe -shared -o "${BOSH_INSTALL_TARGET}\firewall.dll" firewall.o -lole32 -loleaut32
if ($LastExitCode -ne 0) {
  exit $LastExitCode
}

Remove-Item -Recurse -Path "${BOSH_INSTALL_TARGET}\src" -Force
