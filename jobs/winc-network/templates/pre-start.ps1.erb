$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

function EchoWithDate {
  Param (
    [string] $msg
  )
  $date = Get-Date -Format "dd-MM-yyyy @ hh:mm:ss"
  Write-Host "$date - $msg"
}

EchoWithDate "Begin winc-network pre-start"

EchoWithDate "Start http service"
Start-Service -Name http
EchoWithDate "Started http service"

EchoWithDate "winc-network delete"
$deleteLog = New-TemporaryFile
C:\var\vcap\packages\winc-network\winc-network.exe --log $deleteLog.Name --debug --log-format json --action delete --configFile C:\var\vcap\jobs\winc-network\config\interface.json
if ($LASTEXITCODE -ne 0) {
  $file = (Get-Content $deleteLog.Name)
  EchoWithDate $file
  Remove-Item -Force -Path $deleteLog.Name
  exit $LASTEXITCODE
}
Remove-Item -Force -Path $deleteLog.Name

EchoWithDate "winc-network create"
$createLog = New-TemporaryFile
C:\var\vcap\packages\winc-network\winc-network.exe --log $createLog.Name --debug --log-format json --action create --configFile C:\var\vcap\jobs\winc-network\config\interface.json
if ($LASTEXITCODE -ne 0) {
  $file = (Get-Content $createLog.Name)
  EchoWithDate $file
  Remove-Item -Force -Path $createLog.Name
  exit $LASTEXITCODE
}
Remove-Item -Force -Path $createLog

# Check firewall rules
function get-firewall {
	param([string] $profile)
	$firewall = (Get-NetFirewallProfile -Name $profile)
	$result = "{0},{1},{2}" -f $profile,$firewall.DefaultInboundAction,$firewall.DefaultOutboundAction
	return $result
}

function check-firewall {
	param([string] $profile)
	$firewall = (get-firewall $profile)
	EchoWithDate "Check-Firewall for $profile $firewall"
	if ($firewall -ne "$profile,Block,Block") {
		EchoWithDate $firewall
		Write-Error "Unable to set $profile Profile"
	}
}

$anyFirewallsDisabled = !!(Get-NetFirewallProfile -All | Where-Object { $_.Enabled -eq "False" })
$adminRuleMissing = !(Get-NetFirewallRule -Name CFAllowAdmins -ErrorAction Ignore)
if ($anyFirewallsDisabled -or $adminRuleMissing) {
  $admins = New-Object System.Security.Principal.NTAccount("Administrators")
  $adminsSid = $admins.Translate([System.Security.Principal.SecurityIdentifier])

  $LocalUser = "D:(A;;CC;;;$adminsSid)"
  $otherAdmins = Get-WmiObject win32_groupuser |
  Where-Object { $_.GroupComponent -match 'administrators' } |
  ForEach-Object { [wmi]$_.PartComponent }

  foreach($admin in $otherAdmins)
  {
    $ntAccount = New-Object System.Security.Principal.NTAccount($admin.Name)
    $sid = $ntAccount.Translate([System.Security.Principal.SecurityIdentifier]).Value
    $LocalUser = $LocalUser + "(A;;CC;;;$sid)"
  }
  New-NetFirewallRule -Name CFAllowAdmins -DisplayName "Allow admins" `
    -Description "Allow admin users" -RemotePort Any `
    -LocalPort Any -LocalAddress Any -RemoteAddress Any `
    -Enabled True -Profile Any -Action Allow -Direction Outbound `
    -LocalUser $LocalUser

  EchoWithDate "Blocking All Inbound and Outbound connections"
  Set-NetFirewallProfile -All -DefaultInboundAction Block -DefaultOutboundAction Block -Enabled True
  EchoWithDate "Blocked All Inbound and Outbound connections"
  check-firewall "public"
  check-firewall "private"
  check-firewall "domain"
  $anyFirewallsDisabled = !!(Get-NetFirewallProfile -All | Where-Object { $_.Enabled -eq "False" })
  $adminRuleMissing = !(Get-NetFirewallRule -Name CFAllowAdmins -ErrorAction Ignore)
  if ($anyFirewallsDisabled -or $adminRuleMissing) {
    EchoWithDate "anyFirewallsDisabled: $anyFirewallsDisabled"
    EchoWithDate "adminRuleMissing: $adminRuleMissing"
    Write-Error "Failed to Set Firewall rule"
  }
  } else {
  EchoWithDate "CFAllowAdmins rule exists"
  }
EchoWithDate "Finished winc-network pre-start"
Exit 0
